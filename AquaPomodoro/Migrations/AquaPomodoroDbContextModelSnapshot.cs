// <auto-generated />
using System;
using AquaPomodoro.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AquaPomodoro.Migrations
{
    [DbContext(typeof(AquaPomodoroDbContext))]
    partial class AquaPomodoroDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("AquariumPomodoro")
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AquaPomodoro.Models.Aquarium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("addedAt")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("FishId")
                        .HasColumnType("integer")
                        .HasColumnName("fishID");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userID");

                    b.HasKey("Id");

                    b.HasIndex("FishId");

                    b.HasIndex("UserId");

                    b.ToTable("aquariums", "AquariumPomodoro");
                });

            modelBuilder.Entity("AquaPomodoro.Models.Fish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("GifUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("gifURL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<int>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("fishes", "AquariumPomodoro");
                });

            modelBuilder.Entity("AquaPomodoro.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CoinBalance")
                        .HasColumnType("integer")
                        .HasColumnName("coinBalance");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("mail");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("password");

                    b.Property<int>("TotalFocusTime")
                        .HasColumnType("integer")
                        .HasColumnName("totalFocusTime");

                    b.HasKey("Id");

                    b.HasIndex("Mail")
                        .IsUnique();

                    b.ToTable("users", "AquariumPomodoro");
                });

            modelBuilder.Entity("AquaPomodoro.Models.Aquarium", b =>
                {
                    b.HasOne("AquaPomodoro.Models.Fish", "Fish")
                        .WithMany("Aquariums")
                        .HasForeignKey("FishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaPomodoro.Models.User", "User")
                        .WithMany("Aquariums")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fish");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AquaPomodoro.Models.Fish", b =>
                {
                    b.Navigation("Aquariums");
                });

            modelBuilder.Entity("AquaPomodoro.Models.User", b =>
                {
                    b.Navigation("Aquariums");
                });
#pragma warning restore 612, 618
        }
    }
}
